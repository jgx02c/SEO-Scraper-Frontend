{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/joshuagoodman/Documents/GitHub/leaps-dash/src/pages/_document.tsx"],"sourcesContent":["import { Html, Head, Main, NextScript } from \"next/document\";\n\nexport default function Document() {\n  return (\n    <Html lang=\"en\">\n      <Head />\n      <body>\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,qKAAC,yHAAA,CAAA,OAAI;QAAC,MAAK;;0BACT,qKAAC,yHAAA,CAAA,OAAI;;;;;0BACL,qKAAC;;kCACC,qKAAC,yHAAA,CAAA,OAAI;;;;;kCACL,qKAAC,yHAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;AAInB"}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file:///Users/joshuagoodman/Documents/GitHub/leaps-dash/src/pages/_app.tsx"],"sourcesContent":["import \"@/styles/globals.css\";\nimport type { AppProps } from \"next/app\";\n\nexport default function App({ Component, pageProps }: AppProps) {\n  return <Component {...pageProps} />;\n}\n"],"names":[],"mappings":";;;;;;AAGe,SAAS,IAAI,EAAE,SAAS,EAAE,SAAS,EAAY;IAC5D,qBAAO,qKAAC;QAAW,GAAG,SAAS;;;;;;AACjC"}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":["file:///Users/joshuagoodman/Documents/GitHub/leaps-dash/src/components/ui/card.tsx"],"sourcesContent":["// components/Card.tsx\nimport React, { ReactNode } from \"react\";\n\ninterface CardProps {\n  className?: string;\n  children: ReactNode;\n}\n\nexport const Card: React.FC<CardProps> = ({ className = \"\", children }) => (\n  <div className={`bg-gray-800 rounded-xl shadow-lg border border-gray-700 ${className}`}>\n    {children}\n  </div>\n);\n\nexport const CardContent: React.FC<CardProps> = ({ className = \"\", children }) => (\n  <div className={`p-6 space-y-4 ${className}`}>\n    {children}\n  </div>\n);"],"names":[],"mappings":"AAAA,sBAAsB;;;;;;;AAQf,MAAM,OAA4B,CAAC,EAAE,YAAY,EAAE,EAAE,QAAQ,EAAE,iBACpE,qKAAC;QAAI,WAAW,CAAC,wDAAwD,EAAE,WAAW;kBACnF;;;;;;AAIE,MAAM,cAAmC,CAAC,EAAE,YAAY,EAAE,EAAE,QAAQ,EAAE,iBAC3E,qKAAC;QAAI,WAAW,CAAC,cAAc,EAAE,WAAW;kBACzC"}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file:///Users/joshuagoodman/Documents/GitHub/leaps-dash/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n \nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}"],"names":[],"mappings":";;;AAAA;AACA;;;;;;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,kIAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wGAAA,CAAA,OAAI,AAAD,EAAE;AACtB"}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///Users/joshuagoodman/Documents/GitHub/leaps-dash/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n        success: \"border-transparent bg-green-500/20 text-green-400 hover:bg-green-500/30\",\n        warning: \"border-transparent bg-yellow-500/20 text-yellow-400 hover:bg-yellow-500/30\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }"],"names":[],"mappings":";;;;;AACA;AACA;;;;;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,4JAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;YACT,SAAS;YACT,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,qKAAC;QAAI,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE"}},
    {"offset": {"line": 247, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":["file:///Users/joshuagoodman/Documents/GitHub/leaps-dash/src/pages/details/%5Bid%5D.tsx"],"sourcesContent":["import React from 'react';\nimport { Card, CardHeader, CardTitle, CardContent } from '@/components/ui/card';\nimport { Alert, AlertTitle, AlertDescription } from '@/components/ui/alert';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { Badge } from '@/components/ui/badge';\nimport { AlertTriangle, BarChart2, CheckCircle, FileText } from 'lucide-react';\n\nconst ReportSection = ({ report }) => {\n  const getInsightCount = (category) => {\n    if (!report?.insights_count) return 0;\n    return report.insights_count[category] || 0;\n  };\n\n  const getBreakdownItems = (type) => {\n    if (!report?.insights_breakdown) return [];\n    return Object.entries(report.insights_breakdown)\n      .filter(([key]) => {\n        if (type === \"Good Practice\") return key.includes(\"Good practice for SEO\");\n        if (type === \"Needs Attention\") return key.includes(\"missing alt text\") || key.includes(\"Consider adding more content\");\n        return key.includes(\"No canonical tag\") || key.includes(\"No meta description\");\n      })\n      .map(([key, value]) => ({\n        insight: key,\n        count: value\n      }));\n  };\n\n  const getSeverityColor = (section) => {\n    switch (section) {\n      case \"Immediate Action Required\":\n        return \"text-red-400 bg-red-950 border-red-800\";\n      case \"Needs Attention\":\n        return \"text-yellow-400 bg-yellow-950 border-yellow-800\";\n      case \"Good Practice\":\n        return \"text-green-400 bg-green-950 border-green-800\";\n      default:\n        return \"text-gray-400 bg-gray-950 border-gray-800\";\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <Card className=\"bg-red-950/50 border-red-800\">\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"flex items-center space-x-2\">\n              <AlertTriangle className=\"w-5 h-5 text-red-400\" />\n              <span>Critical Issues</span>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-3xl font-bold text-red-400 mb-2\">\n              {getInsightCount(\"Immediate Action Required\")}\n            </div>\n            <ScrollArea className=\"h-32\">\n              {getBreakdownItems(\"Immediate Action Required\").map((item, idx) => (\n                <div key={idx} className=\"flex items-center space-x-2 mb-2\">\n                  <Badge variant=\"destructive\" className=\"shrink-0\">{item.count}x</Badge>\n                  <span className=\"text-sm text-red-200\">{item.insight}</span>\n                </div>\n              ))}\n            </ScrollArea>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-yellow-950/50 border-yellow-800\">\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"flex items-center space-x-2\">\n              <BarChart2 className=\"w-5 h-5 text-yellow-400\" />\n              <span>Warnings</span>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-3xl font-bold text-yellow-400 mb-2\">\n              {getInsightCount(\"Needs Attention\")}\n            </div>\n            <ScrollArea className=\"h-32\">\n              {getBreakdownItems(\"Needs Attention\").map((item, idx) => (\n                <div key={idx} className=\"flex items-center space-x-2 mb-2\">\n                  <Badge variant=\"warning\" className=\"bg-yellow-900 text-yellow-200 shrink-0\">{item.count}x</Badge>\n                  <span className=\"text-sm text-yellow-200\">{item.insight}</span>\n                </div>\n              ))}\n            </ScrollArea>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-green-950/50 border-green-800\">\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"flex items-center space-x-2\">\n              <CheckCircle className=\"w-5 h-5 text-green-400\" />\n              <span>Good Practices</span>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-3xl font-bold text-green-400 mb-2\">\n              {getInsightCount(\"Good Practice\")}\n            </div>\n            <ScrollArea className=\"h-32\">\n              {getBreakdownItems(\"Good Practice\").map((item, idx) => (\n                <div key={idx} className=\"flex items-center space-x-2 mb-2\">\n                  <Badge variant=\"success\" className=\"bg-green-900 text-green-200 shrink-0\">{item.count}x</Badge>\n                  <span className=\"text-sm text-green-200\">{item.insight}</span>\n                </div>\n              ))}\n            </ScrollArea>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Page Reports */}\n      <Card className=\"bg-gray-800/50 border-gray-700\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center space-x-2\">\n            <FileText className=\"w-5 h-5\" />\n            <span>Page Reports ({report.page_reports?.length || 0})</span>\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <ScrollArea className=\"h-96\">\n            <div className=\"space-y-4\">\n              {report.page_reports?.map((pageReport, index) => (\n                <Card key={index} className=\"bg-gray-900/50 border-gray-700\">\n                  <CardContent className=\"p-4\">\n                    <h4 className=\"font-medium text-lg mb-3 text-blue-400 break-all\">\n                      {pageReport.website_url}\n                    </h4>\n                    <div className=\"grid grid-cols-3 gap-2 mb-4\">\n                      <Badge variant=\"destructive\" className=\"justify-center\">\n                        Critical: {pageReport.insights_count[\"Immediate Action Required\"]}\n                      </Badge>\n                      <Badge variant=\"warning\" className=\"bg-yellow-900 text-yellow-200 justify-center\">\n                        Warnings: {pageReport.insights_count[\"Needs Attention\"]}\n                      </Badge>\n                      <Badge variant=\"success\" className=\"bg-green-900 text-green-200 justify-center\">\n                        Good: {pageReport.insights_count[\"Good Practice\"]}\n                      </Badge>\n                    </div>\n                    <div className=\"space-y-2\">\n                      {pageReport.error_citations.map((citation, citIndex) => (\n                        <div\n                          key={citIndex}\n                          className={`p-3 rounded-md ${getSeverityColor(citation.section)}`}\n                        >\n                          {citation.insight}\n                        </div>\n                      ))}\n                    </div>\n                  </CardContent>\n                </Card>\n              ))}\n            </div>\n          </ScrollArea>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default ReportSection;"],"names":[],"mappings":";;;;AACA;;;;;;AAGA;AACA;AAAA;AAAA;AAAA;;;;;;;;;;AAEA,MAAM,gBAAgB,CAAC,EAAE,MAAM,EAAE;IAC/B,MAAM,kBAAkB,CAAC;QACvB,IAAI,CAAC,QAAQ,gBAAgB,OAAO;QACpC,OAAO,OAAO,cAAc,CAAC,SAAS,IAAI;IAC5C;IAEA,MAAM,oBAAoB,CAAC;QACzB,IAAI,CAAC,QAAQ,oBAAoB,OAAO,EAAE;QAC1C,OAAO,OAAO,OAAO,CAAC,OAAO,kBAAkB,EAC5C,MAAM,CAAC,CAAC,CAAC,IAAI;YACZ,IAAI,SAAS,iBAAiB,OAAO,IAAI,QAAQ,CAAC;YAClD,IAAI,SAAS,mBAAmB,OAAO,IAAI,QAAQ,CAAC,uBAAuB,IAAI,QAAQ,CAAC;YACxF,OAAO,IAAI,QAAQ,CAAC,uBAAuB,IAAI,QAAQ,CAAC;QAC1D,GACC,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,GAAK,CAAC;gBACtB,SAAS;gBACT,OAAO;YACT,CAAC;IACL;IAEA,MAAM,mBAAmB,CAAC;QACxB,OAAQ;YACN,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT;gBACE,OAAO;QACX;IACF;IAEA,qBACE,qKAAC;QAAI,WAAU;;0BAEb,qKAAC;gBAAI,WAAU;;kCACb,qKAAC,yHAAA,CAAA,OAAI;wBAAC,WAAU;;0CACd,qKAAC,yHAAA,CAAA,aAAU;gCAAC,WAAU;0CACpB,cAAA,qKAAC,yHAAA,CAAA,YAAS;oCAAC,WAAU;;sDACnB,qKAAC,iNAAA,CAAA,gBAAa;4CAAC,WAAU;;;;;;sDACzB,qKAAC;sDAAK;;;;;;;;;;;;;;;;;0CAGV,qKAAC,yHAAA,CAAA,cAAW;;kDACV,qKAAC;wCAAI,WAAU;kDACZ,gBAAgB;;;;;;kDAEnB,qKAAC;wCAAW,WAAU;kDACnB,kBAAkB,6BAA6B,GAAG,CAAC,CAAC,MAAM,oBACzD,qKAAC;gDAAc,WAAU;;kEACvB,qKAAC,0HAAA,CAAA,QAAK;wDAAC,SAAQ;wDAAc,WAAU;;4DAAY,KAAK,KAAK;4DAAC;;;;;;;kEAC9D,qKAAC;wDAAK,WAAU;kEAAwB,KAAK,OAAO;;;;;;;+CAF5C;;;;;;;;;;;;;;;;;;;;;;kCASlB,qKAAC,yHAAA,CAAA,OAAI;wBAAC,WAAU;;0CACd,qKAAC,yHAAA,CAAA,aAAU;gCAAC,WAAU;0CACpB,cAAA,qKAAC,yHAAA,CAAA,YAAS;oCAAC,WAAU;;sDACnB,qKAAC,yNAAA,CAAA,YAAS;4CAAC,WAAU;;;;;;sDACrB,qKAAC;sDAAK;;;;;;;;;;;;;;;;;0CAGV,qKAAC,yHAAA,CAAA,cAAW;;kDACV,qKAAC;wCAAI,WAAU;kDACZ,gBAAgB;;;;;;kDAEnB,qKAAC;wCAAW,WAAU;kDACnB,kBAAkB,mBAAmB,GAAG,CAAC,CAAC,MAAM,oBAC/C,qKAAC;gDAAc,WAAU;;kEACvB,qKAAC,0HAAA,CAAA,QAAK;wDAAC,SAAQ;wDAAU,WAAU;;4DAA0C,KAAK,KAAK;4DAAC;;;;;;;kEACxF,qKAAC;wDAAK,WAAU;kEAA2B,KAAK,OAAO;;;;;;;+CAF/C;;;;;;;;;;;;;;;;;;;;;;kCASlB,qKAAC,yHAAA,CAAA,OAAI;wBAAC,WAAU;;0CACd,qKAAC,yHAAA,CAAA,aAAU;gCAAC,WAAU;0CACpB,cAAA,qKAAC,yHAAA,CAAA,YAAS;oCAAC,WAAU;;sDACnB,qKAAC,oNAAA,CAAA,cAAW;4CAAC,WAAU;;;;;;sDACvB,qKAAC;sDAAK;;;;;;;;;;;;;;;;;0CAGV,qKAAC,yHAAA,CAAA,cAAW;;kDACV,qKAAC;wCAAI,WAAU;kDACZ,gBAAgB;;;;;;kDAEnB,qKAAC;wCAAW,WAAU;kDACnB,kBAAkB,iBAAiB,GAAG,CAAC,CAAC,MAAM,oBAC7C,qKAAC;gDAAc,WAAU;;kEACvB,qKAAC,0HAAA,CAAA,QAAK;wDAAC,SAAQ;wDAAU,WAAU;;4DAAwC,KAAK,KAAK;4DAAC;;;;;;;kEACtF,qKAAC;wDAAK,WAAU;kEAA0B,KAAK,OAAO;;;;;;;+CAF9C;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAWpB,qKAAC,yHAAA,CAAA,OAAI;gBAAC,WAAU;;kCACd,qKAAC,yHAAA,CAAA,aAAU;kCACT,cAAA,qKAAC,yHAAA,CAAA,YAAS;4BAAC,WAAU;;8CACnB,qKAAC,uMAAA,CAAA,WAAQ;oCAAC,WAAU;;;;;;8CACpB,qKAAC;;wCAAK;wCAAe,OAAO,YAAY,EAAE,UAAU;wCAAE;;;;;;;;;;;;;;;;;;kCAG1D,qKAAC,yHAAA,CAAA,cAAW;kCACV,cAAA,qKAAC;4BAAW,WAAU;sCACpB,cAAA,qKAAC;gCAAI,WAAU;0CACZ,OAAO,YAAY,EAAE,IAAI,CAAC,YAAY,sBACrC,qKAAC,yHAAA,CAAA,OAAI;wCAAa,WAAU;kDAC1B,cAAA,qKAAC,yHAAA,CAAA,cAAW;4CAAC,WAAU;;8DACrB,qKAAC;oDAAG,WAAU;8DACX,WAAW,WAAW;;;;;;8DAEzB,qKAAC;oDAAI,WAAU;;sEACb,qKAAC,0HAAA,CAAA,QAAK;4DAAC,SAAQ;4DAAc,WAAU;;gEAAiB;gEAC3C,WAAW,cAAc,CAAC,4BAA4B;;;;;;;sEAEnE,qKAAC,0HAAA,CAAA,QAAK;4DAAC,SAAQ;4DAAU,WAAU;;gEAA+C;gEACrE,WAAW,cAAc,CAAC,kBAAkB;;;;;;;sEAEzD,qKAAC,0HAAA,CAAA,QAAK;4DAAC,SAAQ;4DAAU,WAAU;;gEAA6C;gEACvE,WAAW,cAAc,CAAC,gBAAgB;;;;;;;;;;;;;8DAGrD,qKAAC;oDAAI,WAAU;8DACZ,WAAW,eAAe,CAAC,GAAG,CAAC,CAAC,UAAU,yBACzC,qKAAC;4DAEC,WAAW,CAAC,eAAe,EAAE,iBAAiB,SAAS,OAAO,GAAG;sEAEhE,SAAS,OAAO;2DAHZ;;;;;;;;;;;;;;;;uCAnBJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmC3B;uCAEe"}},
    {"offset": {"line": 745, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}